var searchIndex = JSON.parse('{\
"kuehree":{"doc":"","t":[0,0,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,16,3,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11],"n":["rmq","sum_query","Max","Min","Rmq","SegmentTree","SparseTableFixed","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","from","from","from","from","from","into","into","into","into","into","ne","ne","new","new","new","partial_cmp","partial_cmp","query","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","IndexableSumQuery","PrefixSumContainer","SumQuery","borrow","borrow_mut","clone","clone_into","cmp","eq","fmt","from","from","from","into","ne","new","new","new","non_zero_query","partial_cmp","prefix_sum_array","prefix_sum_array","prefix_sum_array","query","to_owned","try_from","try_into","type_id"],"q":["kuehree","","kuehree::rmq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kuehree::sum_query","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This trait provides methods required for <code>SumQuery</code> types","","","","","","","","","","","","","","","Construct <code>Self</code>","","","Query between start range and end rage","","","","","Query between start range and end range","","","",""],"i":[0,0,0,0,0,0,0,1,2,3,4,5,1,2,3,4,5,4,5,4,5,4,5,4,5,1,2,3,4,5,1,2,3,4,5,4,5,3,4,5,4,5,5,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,0,6,0,7,7,7,7,7,7,7,7,7,7,7,7,6,7,7,6,7,6,7,7,6,7,7,7,7],"f":[null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["sparsetablefixed",3]],[[],["rmq",3]],[[]],[[]],[[["sparsetablefixed",3]],["ordering",4]],[[["rmq",3]],["ordering",4]],[[["sparsetablefixed",3]],["bool",15]],[[["rmq",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["sparsetablefixed",3]],["bool",15]],[[["rmq",3]],["bool",15]],[[]],[[]],[[]],[[["sparsetablefixed",3]],["option",4,[["ordering",4]]]],[[["rmq",3]],["option",4,[["ordering",4]]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[],["sumquery",3]],[[]],[[["sumquery",3]],["ordering",4]],[[["sumquery",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["sumquery",3]],["bool",15]],[[]],[[]],[[]],[[["nonzerousize",3],["nonzerousize",3]]],[[["sumquery",3]],["option",4,[["ordering",4]]]],[[]],[[]],[[]],[[["usize",15],["usize",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Max"],[3,"Min"],[3,"SegmentTree"],[3,"SparseTableFixed"],[3,"Rmq"],[8,"IndexableSumQuery"],[3,"SumQuery"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};